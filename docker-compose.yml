services:

  init-db:
    image: python:3.11-alpine
    container_name: db-init
    volumes:
      - ./initdb:/initdb
    working_dir: /initdb
    entrypoint: ["python", "generate_sql.py"]
    networks:
      - app-network


  database:
    image: postgres:16.1-alpine3.18
    container_name: pg-docker
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: module1
    ports:
      - "5432:5432"
    volumes:
      - ./initdb/scripts_python:/docker-entrypoint-initdb.d
    networks:
      - app-network
    depends_on:
      init-db:
        condition: service_completed_successfully


  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-boot-app
    restart: always
    depends_on:
      - database
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/module1
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "8080:8080"
    networks:
      - app-network


networks:
  app-network:
    driver: bridge
